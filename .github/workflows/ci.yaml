name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install aptitude
      run: sudo apt-get install -y aptitude

    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get -y install docker.io

    - name: Build Docker image
      run: |
        docker build -t jorgemesa19/imgproyecto .
      
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: jorgemesa19/imgproyecto

    - name: Push Docker image
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        node-options: '--max-old-space-size=4096'

    - name: List Directories
      run: ls -r

    - name: Change directory to back
      run: cd back; ls

    - run: cd back; npm install

    - name: Verify database connection
      run: cd back; node ./scripts/verify-db-connection.js

    - name: Build Angular app
      run: cd admin; npm install

    - name: Run ng serve and capture stdout
      run: cd admin && npm run start > stdout.log 2>&1 & sleep 10

    - name: Upload stdout log
      uses: actions/upload-artifact@v2
      with:
        name: stdout-log
        path: back/stdout.log
